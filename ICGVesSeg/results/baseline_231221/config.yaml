LOSS_FUNCTION:
  _target_: detectron2._cfg_loader31b5.losses.py.LossList
  losses:
  - &id003 !!python/object:detectron2._cfg_loader31b5.losses.py.Diceloss
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _backward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks_with_kwargs: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks_with_kwargs: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - []
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    training: true
  weights: [1]
TRANSFORM_FIELD: {image: image, label: segmentation}
dataloader:
  evaluator:
  - {_target_: detectron2._cfg_loader832b.evaluator.py.VesSegEvaluator, output_dir: 'E:/dl-sy/ICGVesSeg/results\baseline_231221'}
  test:
    _target_: detectron2.segmentation.data.build_test_loader
    batch_size: 1
    dataset: {_target_: detectron2.segmentation.data.BaseDataset, anno_file: 'E:\Generative_MTT\vessel_segmentation\data\jsons\ICG_vessel_segmentation_valid.json'}
    mapper:
      _target_: detectron2._cfg_loaderec99.data_mapper.py.VesSegDataMapper
      transforms: []
    num_workers: 10
  train:
    _target_: detectron2.segmentation.data.build_train_loader
    batch_size: 10
    dataset: {_target_: detectron2.segmentation.data.BaseDataset, anno_file: 'E:\Generative_MTT\vessel_segmentation\data\jsons\ICG_vessel_segmentation_train.json'}
    mapper:
      _target_: detectron2._cfg_loaderec99.data_mapper.py.VesSegDataMapper
      transforms:
      - _target_: detectron2.segmentation.transforms.RotateTransform
        fields: {image: image, label: segmentation}
        rot_angle: [-10, 10]
        rot_freq: 50
      - _target_: detectron2.segmentation.transforms.RandomSizeCrop
        crop_size: [256, 256]
        fields: {image: image, label: segmentation}
      - _target_: detectron2.segmentation.transforms.FlipTransform
        fields: {image: image, label: segmentation}
        flip_axis: [1, 1]
        flip_freq: 60
    num_workers: 10
grad_clippers:
  grad_norm_clipper: !!python/object/apply:functools.partial
    args: [&id001 !!python/name:torch.nn.utils.clip_grad.clip_grad_norm_ '']
    state: !!python/tuple
    - *id001
    - !!python/tuple []
    - {max_norm: 2}
    - null
  grad_value_clipper: &id004 !!python/object/apply:functools.partial
    args: [&id002 !!python/name:torch.nn.utils.clip_grad.clip_grad_value_ '']
    state: !!python/tuple
    - *id002
    - !!python/tuple []
    - {clip_value: 10}
    - null
lr_scheduler:
  _target_: detectron2._cfg_loaderb701.schedule.py.build_multi_step_scheduler
  max_iter: 64000
  milestones: [32640, 48640]
  values: [0.1, 0.01]
  warmup_iter: 20
model:
  _target_: detectron2._cfg_loaderf95a.ves_seg.py.VesselSeg
  backbone:
    _target_: detectron2.segmentation.modeling.UNetBackbone
    abn: 2
    blocks: [2, 4, 5, 6, 6]
    feats: [16, 32, 64, 128, 128]
    input_channel: 1
    scales: [2, 2, 2, 2, 2]
    slim: true
  head:
    _target_: detectron2._cfg_loader99e1.head.py.VesSegHead
    in_channel: 16
    is_drop: false
    loss_function:
      _target_: detectron2._cfg_loader31b5.losses.py.LossList
      losses:
      - *id003
      weights: [1]
    out_channel: 1
  output_dir: E:/dl-sy/ICGVesSeg/results\baseline_231221
  pixel_mean: [0]
  pixel_std: [1]
  resize_size: 256
optimizer:
  _target_: torch.optim.AdamW
  betas: [0.9, 0.999]
  eps: 1.0e-06
  lr: 0.001
  params: {_target_: detectron2.solver.get_default_optimizer_params, weight_decay_norm: 0.0}
  weight_decay: 0.001
train:
  amp:
    enabled: true
    grad_clipper: *id004
  checkpointer: {max_to_keep: 100, period: 3200}
  ddp: {broadcast_buffer: false, find_unused_parameters: false, fp16_compression: false}
  device: cuda
  eval_period: 64640
  init_checkpoint: E:\dl-sy\ICGVesSeg\results\baseline_231220\model_final.pth
  log_period: 5
  max_iter: 64000
  output_dir: E:/dl-sy/ICGVesSeg/results\baseline_231221
  split_combine:
    enabled: true
    split_combiner:
      _target_: detectron2.segmentation.transforms.split_combine.SplitCombiner
      combine_method: avr
      crop_size: [256, 256]
      device: cpu
